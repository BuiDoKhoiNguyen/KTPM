version: '3.8'

networks:
  app_network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: ktpm-app
    expose:
      - "8080"
    environment:
      - PORT=8080
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=ktpm_db
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=data-updates
      - NODE_ENV=production
    depends_on:
      - redis
      - postgres
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    networks:
      - app_network
  
  # Nginx Load Balancer
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - app_network
    restart: on-failure

  redis:
    container_name: redis-ktpm
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: always
    networks:
      - app_network

  postgres:
    container_name: postgres-ktpm
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ktpm_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - app_network